# Training the model
df_3_2=df_3_1[['CUSTOMER_MULTI_PRODUCT',
 'pre_prod_tier_max',
 'target',
 'cr_class','multi_segment',
 'cust_value',
 'hhld_qty',
 'sfu_mdu',
 'city_name',
 'province_code',
 'IPTV_Num_NC_Disconn',
 'RINT_Num_NC_Disconn',
 'tsu_count',
 'int_disc_code',
 'int_disc_type',
 'int_serv_codes',
 'int_serv_codes_camp',
 'int_hf50',
 'int_hf80',
 'int_hf175',
 'int_w2w_wifihub',
 'int_20',
 'int_w2w_wifi_beacon',
 'int_segment',
 'int_ultimate_tier',
 'int_extreme_plus_tier',
 'int_extreme_tier',
 'int_express_tier',
 'int_lite_tier',
 'int_ulite_tier',
 'internet_modem',
 'internet_protection',
 'int_num_act_camp',
 'int_hf10_num_act',
 'int_hf15_num_act',
 'int_hf30_num_act',
 'int_hf50_num_act',
 'int_hf60_num_act',
 'int_hf80_num_act',
 'int_hf150_num_act',
 'int_hf175_num_act',
 'int_hf250_num_act',
 'int_unltd_250_num_act',
 'int_unltd_251_num_act',
 'int_unltd_100_num_act',
 'int_unltd_70_num_act',
 'int_60_num_act',
 'int_30_num_act',
 'int_15_num_act',
 'int_5_num_act',
 'int_unltd_1g_num_act',
 'int_express_num_act',
 'int_extreme_num_act',
 'int_extreme_plus_num_act',
 'int_lite_num_act',
 'int_ulite_num_act',
 'int_ultimate_num_act',
 'int_w2w_wifihub_num_act',
 'int_20_num_act',
 'int_w2w_wifi_beacon_num_act',
 'int_hf10_num_deact',
 'int_hf15_num_deact',
 'int_hf30_num_deact',
 'int_hf50_num_deact',
 'int_hf60_num_deact',
 'int_hf80_num_deact',
 'int_hf150_num_deact',
 'int_hf175_num_deact',
 'int_hf250_num_deact',
 'int_unltd_250_num_deact',
 'int_unltd_251_num_deact',
 'int_unltd_70_num_deact',
 'int_60_num_deact',
 'int_30_num_deact',
 'int_15_num_deact',
 'int_5_num_deact',
 'int_unltd_1g_num_deact',
 'int_extreme_num_deact',
 'int_extreme_plus_num_deact',
 'int_lite_num_deact',
 'smb_internet_num_deact',
 'int_ulite_num_deact',
 'int_ultimate_num_deact',
 'int_20_num_deact',
 'int_unltd_100_num_act_7d',
 'int_unltd_100_num_act_30d',
 'int_unltd_1g_num_act_7d',
 'int_unltd_1g_num_act_30d',
 'int_unltd_1g_num_act_90d',
 'int_unltd_1g_num_act_180d',
 'int_unltd_1g_num_deact_7d',
 'int_unltd_1g_num_deact_30d',
 'int_unltd_1g_num_deact_90d',
 'int_unltd_250_num_act_7d',
 'int_unltd_250_num_act_30d',
 'int_unltd_250_num_act_90d',
 'int_unltd_250_num_deact_7d',
 'int_unltd_250_num_deact_30d',
 'int_unltd_251_num_act_7d',
 'int_unltd_251_num_act_30d',
 'int_unltd_251_num_act_90d',
 'int_unltd_251_num_act_180d',
 'int_unltd_251_num_deact_7d',
 'int_unltd_251_num_deact_30d',
 'int_unltd_251_num_deact_90d',
 'int_unltd_70_num_act_7d',
 'int_unltd_70_num_act_30d',
 'int_unltd_70_num_deact_7d',
 'int_unltd_70_num_deact_30d',
 'ftth_seg',
 'ftth_ind',
 'pst_net_msf',
 'pst_discount',
 'pst_tsu_count',
 'pst_int_discount',
 'pst_int_net_msf',
 'pst_int_tier',
 'pst_int_product_code',
 'pst_int_disc_code',
 'pst_int_serv_disc',
 'pst_int_serv_net',
 'int_net_delta',
 'sm_digital_calls_6m',
 'sm_t3_calls_6m',
 'sm_tech_care_calls_6m',
 'sm_digital_calls_3m',
 'sm_t3_calls_3m',
 'sm_tech_care_calls_3m',
 'sm_int_duration_1m',
 'sm_digital_calls_1m',
 'sm_t3_calls_1m',
 'sm_tech_care_calls_1m',
 'sm_tv_eop_int_1m',
 'sm_rhp_eop_int_1m',
 'sm_num_call_tv_1m',
 'sm_num_call_int_1m',
 'sm_total_num_calls_1m',
 'sm_num_call_tv_pso_1m',
 'sm_num_call_int_pso_1m',
 'sm_num_call_rhp_pso_1m',
 'sm_num_call_tv_other_1m',
 'sm_num_call_int_other_1m',
 'sm_num_call_tv_7d',
 'sm_num_call_int_7d',
 'sm_total_num_calls_7d',
 'sm_num_call_tv_pso_7d',
 'sm_num_call_int_pso_7d',
 'sm_num_call_rhp_pso_7d',
 'sm_num_call_tv_other_7d',
 'rtv_num_downgrade_180d',
 'iptv_num_nc_disconn_7d',
 'rint_num_nc_disconn_7d',
 'av_int_discount_6m',
 'av_int_serv_disc_6m',
 'av_int_equip_override_6m',
 'av_ecp_amt_6m',
 'av_tve_tier_onetime_3m',
 'av_tot_discount_3M',
 'av_int_discount_3M',
 'av_int_net_msf_3M',
 'av_int_serv_disc_3M',
 'av_int_serv_net_3M',
 'av_int_equip_override_3M',
 'av_ecp_amt_3M',
 'av_tot_discount_1M',
 'av_int_discount_1M',
 'av_int_net_msf_1M',
 'av_int_serv_disc_1M',
 'av_int_serv_net_1M',
 'av_int_equip_override_1M',
 'av_ecp_amt_1M',
 'av_saf_amt_1M',
 'tr_neg_rate_amt_6m',
 'tot_discount',
 'int_discount',
 'int_net_msf',
 'int_serv_disc',
 'int_serv_net',
 'int_equip_override',
 'int_equip_onetime',
 'int_docsis_3_ac_gw',
 'int_ethernet_card',
 'int_dsl',
 'int_num_docsis_3_ac_gw',
 'int_num_ethernet_card',
 'int_num_dsl',
 'tv_box_sd_nonpvr_p',
 'tv_box_sd',
 'tv_box_hd_pvr_r',
 'tv_box_hd_pvr_p',
 'tv_box_hd_nonpvr_r',
 'tv_box_hd_nonpvr_p',
 'tv_box_hd',
 'tv_box_nextbox_pvr_r',
 'tv_box_nextbox_pvr_p',
 'tv_box_nextbox_nonpvr_r',
 'tv_box_nextbox_nonpvr_p',
 'tv_digital_adapter',
 'tv_moxi_r',
 'tv_box_nextbox_nonpvr_ro',
 'tv_moxi_p',
 'tv_box_nextbox_4k_nonpvr_r',
 'ts_tv_box_nextbox_4k_nonpvr_p_last_add_date',
 'ts_tv_box_nextbox_4k_nonpvr_p_last_drop_date',
 'ts_int_dsl_last_add_date',
 'ts_int_box_modem_r_last_add_date',
 'ts_int_dsl_last_drop_date',
 'sm_tv_dur_hrs_unknown_7d',
 'sm_tv_dur_hrs_unknown_1m',
 'min_tv_dur_hrs_unknown_7d',
 'min_tv_dur_hrs_unknown_1m',
 'max_tv_max_dur_hrs_7d',
 'max_tv_max_dur_hrs_1m',
 'max_tv_dur_hrs_unknown_1m',
 'av_tv_dur_hrs_unknown_7d',
 'av_tv_dur_hrs_unknown_1m',
 'av_tv_cnt_sess_other_1m',
 'tv_dur_hrs_weekend',
 'tv_dur_hrs_unknown',
 'max_tv_dur_hrs_unknown',
 'avg_tv_dur_hrs_weekend',
 'max_tv_dur_hrs_unknown_7d',
 'av_tv_cnt_sess_unknown_1m',
 'av_tv_cnt_sess_other_7d',
 'tv_cnt_sess_weekend',
 'avg_tv_dur_hrs_unknown',
 'Chng_Int_Serv_Disc',
 'Chng_TVE_Tier',
 'service_90',
 'internet_90',
 'numv_tv_pg_90',
 'numv_how_to_order_tv_pg_90',
 'numv_tv_pkg_pg_90',
 'numv_4k_tv_pg_90',
 'numv_compare_tv_pg_90',
 'numv_tv_hardware_pg_90',
 'numv_tv_pkge_prcng_pg_90',
 'numv_tv_free_promo_pg_90',
 'numv_tv_start_pkge_pg_90',
 'numv_tv_tmn_pg_90',
 'numv_bb_pg_90',
 'numv_pkg_prcng_pg_90',
 'numv_bb_modm_rtrs_pg_90',
 'numv_bb_hgh_spd_pg_90',
 'numv_bb_stry_pg_90',
 'numv_bndl_pkg_prcng_pg_90',
 'NUMV_SHM_google_PG_90',
 'NUMV_HM_PG_90',
 'NUMV_TMN_PG_90',
 'signin_60',
 'service_60',
 'internet_60',
 'numv_tv_pg_60',
 'numv_how_to_order_tv_pg_60',
 'numv_tv_pkg_pg_60',
 'numv_4k_tv_pg_60',
 'numv_compare_tv_pg_60',
 'numv_tv_hardware_pg_60',
 'numv_tv_pkge_prcng_pg_60',
 'numv_tv_free_promo_pg_60',
 'numv_tv_start_pkge_pg_60',
 'numv_tv_tmn_pg_60',
 'numv_bb_pg_60',
 'numv_pkg_prcng_pg_60',
 'numv_bb_modm_rtrs_pg_60',
 'numv_bb_promo_pg_60',
 'numv_bb_hgh_spd_pg_60',
 'numv_bb_stry_pg_60',
 'numv_bndl_pg_60',
 'numv_bndl_tv_bb_pg_60',
 'numv_bndl_pkg_prcng_pg_60',
 'NUMV_SHM_google_PG_60',
 'NUMV_HM_PG_60',
 'NUMV_TMN_PG_60',
 'signin_30',
 'service_30',
 'tv_30',
 'tv_package_30',
 'internet_30',
 'numv_tv_pg_30',
 'numv_how_to_order_tv_pg_30',
 'numv_tv_pkg_pg_30',
 'numv_4k_tv_pg_30',
 'numv_compare_tv_pg_30',
 'numv_tv_hardware_pg_30',
 'numv_tv_pkge_prcng_pg_30',
 'numv_tv_free_promo_pg_30',
 'numv_tv_start_pkge_pg_30',
 'numv_tv_tmn_pg_30',
 'numv_bb_pg_30',
 'numv_pkg_prcng_pg_30',
 'numv_bb_modm_rtrs_pg_30',
 'numv_bb_hgh_spd_pg_30',
 'numv_bb_stry_pg_30',
 'numv_bndl_pg_30',
 'numv_bndl_tv_bb_pg_30',
 'numv_bndl_pkg_prcng_pg_30',
 'numv_bndl_promo_pg_30',
 'NUMV_SHM_google_PG_30',
 'NUMV_HM_PG_30',
 'NUMV_TMN_PG_30',
 'r_up_mbytes_7d_30d',
 'r_down_mbytes_7d_30d',
 'r_total_usg_mbytes_7d_30d',
 'r_up_mbytes_7d_60d',
 'r_down_mbytes_7d_60d',
 'r_total_usg_mbytes_7d_60d',
 'r_up_mbytes_7d_90d',
 'r_down_mbytes_7d_90d',
 'r_total_usg_mbytes_7d_90d',
 'r_outage_count_7d_60d',
 'r_up_status_count_7d_60d',
 'r_down_status_count_7d_60d',
 'r_outage_count_7d_90d',
 'r_up_status_count_7d_90d',
 'r_down_status_count_7d_90d',
 'r_downtime_all_day_7d_90d',
 'TV',
 'Recomm_Accepted',
 'RecommEOP_Accepted',
 'RecommLoyalty_Accepted',
 'DeviceProtection_Accepted',
 'IgniteTVRecommendedPlan_Accepted',
 'LTRRiskResi_Accepted',
 'ResiAddBB_Accepted',
 'ResiAddIgniteTV_Accepted',
 'ResiAddWRLS_Accepted',
 'ResiRetention_Accepted',
 'SHM_Accepted',
 'VAS_Accepted',
 'WirelessRenewal_Accepted',
 'WirelessRetention_Accepted',
 'WRLSAddResi_Accepted',
 'Recomm_Declined',
 'RecommEOP_Declined',
 'RecommLoyalty_Declined',
 'DEFAULT_Declined',
 'DeviceProtection_Declined',
 'IgniteTVRecommendedPlan_Declined',
 'LTRRiskResi_Declined',
 'ResiAddBB_Declined',
 'ResiAddIgniteTV_Declined',
 'ResiAddWRLS_Declined',
 'ResiRetention_Declined',
 'SHM_Declined',
 'VAS_Declined',
 'WirelessRenewal_Declined',
 'WirelessRetention_Declined',
 'WRLSAddResi_Declined',
 'Recomm_Interested',
 'RecommEOP_Interested',
 'RecommLoyalty_Interested',
 'DEFAULT_Interested',
 'DeviceProtection_Interested',
 'IgnTVRecommPlan_Interested',
 'LTRRiskResi_Interested',
 'ResiAddBB_Interested',
 'ResiAddIgniteTV_Interested',
 'ResiAddWRLS_Interested',
 'ResiRetention_Interested',
 'SHM_Interested',
 'VAS_Interested',
 'WirelessRenewal_Interested',
 'WirelessRetention_Interested',
 'WRLSAddResi_Interested']]

df_3_3=df_3_2.drop(['cr_class','multi_segment','cust_value','hhld_qty','province_code','int_disc_code',
'int_disc_type','int_serv_codes','int_serv_codes_camp','int_segment','internet_protection','pst_int_tier',
'int_ultimate_tier',
 'int_extreme_plus_tier',
 'int_extreme_tier',
 'int_express_tier',
 'int_lite_tier',
 'int_ulite_tier','pst_int_product_code','pst_int_disc_code','tsu_count','city_name'],axis=1)

object_col = df_3_3.columns[(df_3_3.dtypes == "category")].tolist()
obj_col_exld=['CUSTOMER_MULTI_PRODUCT','pre_prod_tier_max','sfu_mdu','internet_modem','ftth_seg','ftth_ind',
'Chng_Int_Serv_Disc','Chng_TVE_Tier']

for i in obj_col_exld:
  cond = df_3_3[i].value_counts(normalize=True) < 0.01
  others = cond[cond].index
  others_dict = {k: "others" for k in others}
  df_3_3[i] = df_3_3[i].replace(others_dict)
  df_3_3[i].value_counts()

df_7 = pd.get_dummies(df_3_3)
df_8 = df_7.fillna(0)

regex = re.compile(r"\[|\]|<", re.IGNORECASE)
df_8.columns = [regex.sub("_", col) if any(x in str(col) for x in set(('[', ']', '<'))) else col for col in df_8.columns.values]

y = df_8.iloc[:,0]
x = df_8.iloc[:,1:]
y.value_counts()

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42,shuffle=True)
y_train.value_counts()
y_test_1=y_test.to_numpy()

XGB=xgb.XGBRegressor(reg_lambda=0.08,reg_alpha=3, n_estimators=300,min_child_weight=9,max_depth=12, learning_rate=0.05,gamma=0.5,colsample_bytree=0.65, Subsample= 0.9,random_state=0)

XGB.fit(x_train,y_train)

# Save the trained model
os.makedirs('outputs', exist_ok=True)
joblib.dump(value=XGB, filename='outputs/IGN_BDL_Upsell_model.pkl')

model = Model.register(workspace=ws,
                       model_name='IGN_BDL_Upsell_model',
                       model_path='outputs/IGN_BDL_Upsell_model.pkl', # local path
                       description='IGN_BDL_Upsell_model',
                       tags={'data-format': 'CSV'},
                       model_framework=Model.Framework.SCIKITLEARN,
                       model_framework_version='0.0.1')

for model in Model.list(ws):
    # Get model name and auto-generated version
    print(model.name, 'version:', model.version)